swagger: "2.0"
info: 
  description: "Pré-Pago API"
  version: "2.0.0"
  title: "Pré-Pago Portador"
host: api-cateno.sensedia.com/dev/prepaid-holder
basePath: "/v2"
schemes:
  - https
tags:
- name: "OAuth"
  description: "Operaçoes com a autenticação"
- name: "User"
  description: "Operações com usuarios"
- name: "CEP"
  description: "Operações com cep"
- name: "Accounts"
  description: "Operações com contas"
- name: "Cards"
  description: "Operações com cartões"
# - name: "Transaction"
#   description: "Operações com transações"  
# - name: "Boleto"
#   description: "Operações com boletos"
- name: "Extrato"
  description: "Operações com extratos"
- name: "Two Factor Authentication"
  description: "Operações com dupla validação"
- name: "Keys"
  description: "Operações com chaves"
- name: "Autocadastro"
  description: "Operações de autocadastro relacionadas a boletos"
- name: "Comprovantes"
  description: "Serviços relacionados à comprovantes"
- name: "General"
  description: "Endpoints de finalidade geral"

paths: 
  #USER
  /user/{cpf}: 
    get: 
      tags: 
        - "User"
      summary: "Recebe os dados do usuário"
      parameters: 
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - 
          name: "access_token"
          in: "header"
          description: "access_token capturado no login"
          required: true
          type: "string"
        - 
          name: "productId"
          in: "query"
          description: "productId"
          required: true
          type: "string"
        - 
          name: "cpf"
          in: "path"
          description: "cpf"
          required: true
          type: "Number"
      responses: 
          200: 
            description: "Dados do usuario {cpf}"  
            schema:
              $ref: '#/definitions/UserSchema'
          400: 
            description: "Nenhuma conta ativa para o usuário encontrada neste domínio."  
            schema:
              $ref: '#/definitions/ErrorSchema'

  /users/{cpf}/active: 
    get: 
      tags: 
        - "User"
      summary: "Retorna se o usuário possui conta ativa nos produtos parametrizados"
      parameters: 
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - 
          name: "productId"
          in: "query"
          description: "ID dos produtos separados por vírgula"
          required: false
          type: "string"
        - 
          name: "cpf"
          in: "path"
          description: "CPF do usuário"
          required: true
          type: "string"
      responses: 
          200: 
            description: "Usuário possui cartão pré-pago ativo"  
          400: 
            description: "Usuário não possui cartão pré-pago ativo"  

  #TRANSACTION            
  # /accounts/{accountId}/transactions/p2p:
  #   post:   
  #     tags:
  #       - "Transaction"        
  #     summary: "Realiza transação entre constas de portador"
  #     parameters:
  #       - 
  #         name: "accountId"
  #         in: "path"
  #         description: "accountId"
  #         required: true
  #         type: "string"
  #       - 
  #         name: "Authorization"
  #         in: "header"
  #         description: "access_token capturado no login"
  #         required: true
  #         type: "string"
  #       - 
  #         name: "client_id"
  #         in: "header"
  #         description: "client_id"
  #         required: true
  #         type: "string"
  #       - 
  #         name: "tokentransaction"
  #         in: "header"
  #         description: "Token de transação valido capturado na função 'Valida a senha do cartão'"
  #         required: true
  #         type: "string"
  #       - in: body
  #         name: p2pSchema
  #         description: "Parametros para transação P2P"
  #         schema:
  #           $ref: '#/definitions/p2pSchema'
  #     responses: 
  #       200: 
  #         description: "Operaçao realizada com sucesso. Gerando comprovantes"
  #       400:
  #         description: "Token inválido"
      
  # /accounts/{accountId}/transactions/transfer:
  #   post:   
  #     tags:
  #       - "Transaction"        
  #     summary: "Realiza transação entre consta portador e outro banco"
  #     parameters:
  #       - 
  #         name: "accountId"
  #         in: "path"
  #         description: "accountId"
  #         required: true
  #         type: "string"
  #       - 
  #         name: "Authorization"
  #         in: "header"
  #         description: "access_token capturado no login"
  #         required: true
  #         type: "string"
  #       - 
  #         name: "client_id"
  #         in: "header"
  #         description: "client_id"
  #         required: true
  #         type: "string"
  #       - 
  #         name: "tokentransaction"
  #         in: "header"
  #         description: "Token de transação valido capturado na função 'Valida a senha do cartão'"
  #         required: true
  #         type: "string"
  #       - in: body
  #         name: transferSchema
  #         description: "Parametros para transação entre bancos"
  #         schema:
  #           $ref: '#/definitions/transferSchema'
  #     responses: 
  #       200: 
  #         description: "Operaçao realizada com sucesso. Gerando comprovantes"
  #       400:
  #         description: "Token inválido" 
      
  # /accounts/{accountId}/transactions/recharge-cell:
  #   post:   
  #     tags:
  #       - "Transaction"        
  #     summary: "Realiza recarga de celular"
  #     parameters: 
  #       - 
  #         name: "accountId"
  #         in: "path"
  #         description: "accountId"
  #         required: true
  #         type: "string"
  #       - 
  #         name: "Authorization"
  #         in: "header"
  #         description: "access_token capturado no login"
  #         required: true
  #         type: "string"
  #       - 
  #         name: "client_id"
  #         in: "header"
  #         description: "client_id"
  #         required: true
  #         type: "string"
  #       - 
  #         name: "tokentransaction"
  #         in: "header"
  #         description: "Token de transação valido capturado na função 'Valida a senha do cartão'"
  #         required: true
  #         type: "string"
  #       - in: body
  #         name: rechargeCellSchema
  #         description: "Parametros para recarga de celular"
  #         schema:
  #           $ref: '#/definitions/rechargeCellSchema'
  #     responses: 
  #       200: 
  #         description: "Operaçao realizada com sucesso. Gerando comprovantes"
  #       400:
  #         description: "Token inválido"
    
  # /accounts/{accountId}/transactions/bill-payment:
  #   post:   
  #     tags:
  #       - "Transaction"        
  #     summary: "Realiza pagamento de boleto"
  #     parameters:
  #       - 
  #         name: "accountId"
  #         in: "path"
  #         description: "accountId"
  #         required: true
  #         type: "string"
  #       - 
  #         name: "Authorization"
  #         in: "header"
  #         description: "access_token capturado no login"
  #         required: true
  #         type: "string"
  #       - 
  #         name: "client_id"
  #         in: "header"
  #         description: "client_id"
  #         required: true
  #         type: "string"
  #       - 
  #         name: "tokentransaction"
  #         in: "header"
  #         description: "Token de transação valido capturado na função 'Valida a senha do cartão'"
  #         required: true
  #         type: "string"
  #       - in: body
  #         name: billPaymentSchema
  #         description: "Parametros para pagamento de boleto"
  #         schema:
  #           $ref: '#/definitions/billPaymentSchema'
  #     responses: 
  #       200: 
  #         description: "Operaçao realizada com sucesso. Gerando comprovantes"
  #       400:
  #         description: "Token inválido"
    
  /bankslip/{ourNumber}/pdf:
    get:   
        tags:
          - "Transaction"        
        summary: "Gera o PDF de um boleto já registrado"
        parameters:
          - 
            name: "access_token"
            in: "header"
            description: "access_token capturado no login"
            required: true
            type: "string"
          - 
            name: "client_id"
            in: "header"
            description: "client_id"
            required: true
            type: "string"
          - 
            name: "ourNumber"
            in: "path"
            description: "Código nosso número do boleto"
            required: true
            type: "integer"
        responses: 
          200: 
            description: "PDF gerado em Base64"
            schema:
              $ref: '#/definitions/bankslipPDFSchema'
          400:
            description: "Número do boleto não encontrado"
          401:
            description: "Unauthorized"

  /bankslips/{ourNumber}:
    get:   
      tags:
        - "Transaction"        
      summary: "Gera o PDF de um boleto já registrado e envia por e-mail"
      parameters:
        - 
          name: "access_token"
          in: "header"
          description: "access_token capturado no login"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - 
          name: "ourNumber"
          in: "path"
          description: "Código nosso número do boleto"
          required: true
          type: "string"
        - 
          name: "email"
          in: "query"
          description: "E-mail a ser enviado o boleto"
          required: true
          type: "string"
      responses: 
        200: 
          description: "PDF enviado com sucesso para o e-mail xxxxxxxxxxxxx@xxxx.com."
          schema:
            $ref: '#/definitions/bankslipPDFSchema'
        400:
          description: "Número do boleto não encontrado"
        401:
          description: "Unauthorized"
  # /recharge/bankslip/pdf:
  #   post:
  #     tags:
  #       - "Transaction"        
  #     summary: "Envia o pdf de recarga de boleto por e-mail"
  #     parameters:
  #       - 
  #         name: "accountId"
  #         in: "path"
  #         description: "accountId"
  #         required: true
  #         type: "string"
  #       - 
  #         name: "Authorization"
  #         in: "header"
  #         description: "access_token capturado no login"
  #         required: true
  #         type: "string"
  #       - 
  #         name: "client_id"
  #         in: "header"
  #         description: "client_id"
  #         required: true
  #         type: "string"
  #       - 
  #         name: "tokentransaction"
  #         in: "header"
  #         description: "Token de transação valido capturado na função 'Valida a senha do cartão'"
  #         required: true
  #         type: "string"
  #       - in: body
  #         name: bankslippdfbyemailSchema
  #         description: "Parametros para enviar recarga de boleto por email"
  #         schema:
  #           $ref: '#/definitions/bankslippdfbyemailSchema'
  #     responses: 
  #       200: 
  #         description: “The email was successfully sent”
  #       400:
  #         description: “Número do boleto não encontrado.”
  #         schema:
  #           $ref: '#/definitions/MessageSchema'

  /accounts/{accountId}/bankslip:
    post:
      tags:
        - "Transaction"        
      summary: "Registra um boleto de recarga no Banco do Brasil"
      parameters:
        - 
          name: "accountId"
          in: "path"
          description: "accountId"
          required: true
          type: "string"
        - 
          name: "access_token"
          in: "header"
          description: "access_token capturado no login"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - 
          name: "tokentransaction"
          in: "header"
          description: "Token de transação valido capturado na função 'Valida a senha do cartão'"
          required: true
          type: "string"
        - in: body
          name: banksliregisterSchema
          description: "Parametros para enviar recarga de boleto por email"
          schema:
            $ref: '#/definitions/banksliregisterSchema'
      responses: 
        201: 
          description: “OK”
          schema:
            $ref: '#/definitions/bankslipRegisterResponseSchema'
        400:
          description: “Falha ao gerar boleto de recarga.”
          schema:
            $ref: '#/definitions/MessageSchema'
  


  #COMPROVANTES      
  /accounts/{accountId}/vouchers:
    get:   
      tags:
        - "Comprovantes"        
      summary: "Retorna os comprovantes do portador"
      parameters: 
        - 
          name: "accountId"
          in: "path"
          description: "ID da conta"
          required: true
          type: "string"
        - 
          name: "access_token"
          in: "header"
          description: "access_token capturado no login"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - 
          name: "startdate"
          in: "query"
          description: "startdate (YYYY-MM-DD)"
          required: false
          type: "string"
        - 
          name: "enddate"
          in: "query"
          description: "enddate (YYYY-MM-DD)"
          required: false
          type: "string"
        - 
          name: "tipo"
          in: "query"
          description: "tipo"
          required: false
          type: "number"
      responses: 
        200: 
          description: "Retorna lista de comprovantes do Portador"
          schema:
            $ref: '#/definitions/VoucherResponseSchema'
        404:
          description: "Nenhum comprovante encontrado."
          schema:
            $ref: '#/definitions/MessageSchema'
    post:   
      tags:
        - "Comprovantes"        
      summary: "Salva um comprovante"
      parameters: 
        - 
          name: "accountId"
          in: "path"
          description: "ID da conta"
          required: true
          type: "string"
        - 
          name: "access_token"
          in: "header"
          description: "access_token capturado no login"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - in: body
          name: body
          description: "Parâmetros de cadastro de comprovante"
          schema:
            $ref: '#/definitions/VoucherResponseSchema'
      responses: 
        201: 
          description: "Comprovante cadastrado com sucesso"
          schema:
            $ref: '#/definitions/VoucherResponseSchema'
        404:
          description: "Nenhum comprovante encontrado."
          schema:
            $ref: '#/definitions/MessageSchema'

  /accounts/{accountId}/vouchers/{idVoucher}:
    get:   
      tags:
        - "Comprovantes"        
      summary: "Retorna o comprovante por ID"
      parameters: 
        - 
          name: "accountId"
          in: "path"
          description: "ID da conta"
          required: true
          type: "string"
        - 
          name: "idVoucher"
          in: "path"
          description: "ID do comprovante"
          required: true
          type: "string"
        - 
          name: "access_token"
          in: "header"
          description: "access_token capturado no login"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
      responses: 
        200: 
          description: "Retorna o comprovante"
          schema:
            $ref: '#/definitions/VoucherResponseSchema'
        404:
          description: "Nenhum comprovante encontrado."
          schema:
            $ref: '#/definitions/MessageSchema'

  #ACCOUNTS
  /user/{cpf}/carrossel:
    get:
      tags:
        - "Accounts"
      summary: "Lista as contas, cartões e transações permitidas ao portador"
      parameters:
        -
          name: "client_id"
          in: "header"
  # /accounts/{accountId}/cards: 
  #   get: 
  #     tags: 
  #       - "Accounts"
  #     summary: "Lista cartões da conta do portador"
  #     parameters:
  #       - 
  #         name: "accountId"
  #         in: "path"
  #         description: "accountId"
  #         required: true
  #         type: "string"
  #       - 
  #         name: "Authorization"
  #         in: "header"
  #         description: "access_token capturado no login"
  #         required: true
  #         type: "string"
  #       - 
  #         name: "client_id"
  #         in: "header"
  #         description: "client_id"
  #         required: true
  #         type: "string"
  #     responses: 
  #       200: 
  #         description: "Cartões encontrados"
  #         schema:
  #           $ref: '#/definitions/CardsSchema'
  #       400:
  #         description: "Nenhum registro encontrado para essa solicitação"
  #         schema:
  #           $ref: '#/definitions/MessageSchema'
  
  # /accountdetail:
  #   get:
  #     tags:
  #       - "Accounts"
  #     summary: "Lista os detalhes da conta pelo ID"
  #     parameters: 
  #       - 
  #         name: "accountId"
  #         in: "query"
  #         description: "accountId"
  #         required: true
  #         type: "string"
  #       - 
  #         name: "Authorization"
  #         in: "header"
  #         description: "access_token capturado no login"
  #         required: true
  #         type: "string"
  #       - 
  #         name: "client_id"
  #         in: "header"
  #         description: "client_id"
  #         required: true
  #         type: "string"
  #     responses: 
  #       200: 
  #         description: "Conta encontrada"
  #         schema:
  #           $ref: '#/definitions/accountDetailSchema'
  #       404:
  #         description: "Nenhum registro encontrado para essa solicitação"
  #         schema:
  #           $ref: '#/definitions/MessageSchema'
  
  /users/{cpf}/account:
    get:
      tags:
        - "Accounts"
      summary: "Retorna os dados da conta através do número do cartão encryptado"
      parameters: 
        - 
          name: "access_token"
          in: "header"
          description: "access_token capturado no login"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - 
          name: "cpf"
          in: "path"
          description: "CPF do usuário"
          required: true
          type: "string"
        - 
          name: "encryptedParam"
          in: "header"
          description: "Número do cartão encryptado com RSA através da chave pública"
          required: true
          type: "string"
      responses: 
        200: 
          description: "Conta encontrada"
          schema:
            $ref: '#/definitions/accountSchema'
        400:
          description: "CPF não corresponde à conta de destino do cartão."
          schema:
            $ref: '#/definitions/MessageSchema'
        404:
          description: "Nenhum registro encontrado para essa solicitação"
          schema:
            $ref: '#/definitions/MessageSchema'

  #OAUTH 
  /confirmation: 
    post:
      tags: 
      - "OAuth"
      summary: "Confirma a nova senha do Portal através do código validador"
      parameters:
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - in: body
          name: body
          description: "Parametros de alteração de senha esquecida com código validador"
          schema:
            $ref: '#/definitions/forgotSchema'
      responses:
        201: 
          description: "Senha alterada com sucesso"
          schema:
            $ref: '#/definitions/MessageSchema'
        400:
          description: "Código inválido / A senha não atende aos requisitos mínimos. Ela deve possuir ao menos 1 letra minúscula, 1 letra maiúscula, 1 número e 1 caracter especial."

  
  /oauth/password:
    get: 
      tags: 
      - "OAuth"
      summary: "Solicita código validador para alterar a senha"
      parameters:
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - name: "username"
          in: "query"
          type: "string"
        - name: "idCompany"
          in: "query"
          type: "string"
      responses: 
        200: 
          description: "Uma nova senha foi enviada para xxx"
          schema:
            $ref: '#/definitions/MessageSchema'
        400:
          description: "Você ainda está com senha temporária, para continuar você precisará de uma nova. Favor voltar ao início do portal e solicitar um novo cadastro de acesso para receber uma nova senha."   

    post:
      tags: 
      - "OAuth"
      summary: "Cadastra senha definitiva no primeiro acesso"
      parameters:
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - in: body
          name: body
          required: true
          description: "Parametros de alteração de senha temporária"
          schema:
            $ref: '#/definitions/firstAccessChangePasswordSchema'
      responses:
        201: 
          description: "Senha alterada com sucesso"
          schema:
            $ref: '#/definitions/LoginResponseSchema'
        400:
          description: "A senha não atende aos requisitos mínimos. Ela deve possuir ao menos 1 letra minúscula, 1 letra maiúscula, 1 número e 1 caracter especial."
        401:
          description: "Senha incorreta."
    put:
        tags:
        - "OAuth"	
        summary: "Altera a senha do portal com a senha atual"
        parameters:
          - 
            name: "Authorization"
            in: "header"
            description: "access_token capturado no login"
            required: true
            type: "string"
          - 
            name: "client_id"
            in: "header"
            description: "client_id"
            required: true
            type: "string"
          - 
            in: body
            name: body
            description: "Parâmetros de alteração de senha"
            schema:
              $ref: '#/definitions/AlterPasswordSchema'
        responses:
          204:
            description: "Senha alterada com sucesso"
            schema:
              $ref: '#/definitions/MessageSchema'
          400:
            description: "Código de verificação inválido / Falha ao resetar a senha / A senha não atende aos requisitos mínimos. Ela deve possuir ao menos 1 letra minúscula, 1 letra maiúscula, 1 número e 1 caracter especial."

  /oauth/login: 
    post: 
      tags: 
      - "OAuth"
      summary: "Login do portador"
      parameters: 
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - in: body
          name: LoginSchema
          description: "Parametros de login"
          schema:
            $ref: '#/definitions/LoginSchema'
      responses: 
        201: 
          description: "Sucesso no login"
          headers:
            access_token:
              schema:
                type: string
              description: access_token.
            refresh_token:
              schema:
                type: string
              description: refresh_token.
          schema:
            $ref: '#/definitions/LoginResponseSchema' 
        401:
          description: "Falha na autenticação. Verifique se os dados foram informados corretamente. / Usuário ou senha incorretos. Você possui mais x tentativas antes do bloqueio de acesso"
        423:
          description: "O seu usuário está bloqueado, por favor realize o processo de esqueceu a senha."

  /oauth/register:
    post:
      tags:
        - "OAuth" 
      summary: "Registra o usuário"
      parameters:
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - in: body
          name: RegisterSchema
          description: "Parametros de login"
          schema:
            $ref: '#/definitions/RegisterSchema'
      responses: 
        201: 
          description: "CPF cadastrado com sucesso"
          schema:
            $ref: '#/definitions/MessageSchema'
        401:
          description: 'Usuário já cadastrado'
          schema:
            $ref: '#/definitions/MessageSchema'           
  
  #CARDS
  /cards/{cardId}/password: 
    put: 
      tags: 
      - "Cards"
      summary: "Altera a senha do cartão com a senha atual ou com o código validador quando se esqueceu a senha"
      parameters:
        - 
          name: "access_token"
          in: "header"
          description: "access_token capturado no login"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - 
          name: "cardId"
          in: "path"
          description: "cardId"
          required: true
          type: "string"
        - in: body
          name: alterpassSchema
          description: "Alterar senha esquecida"
          schema:
            $ref: '#/definitions/alterpasswithSchema'
        - in: body
          name: alterpasswithSchema
          description: "Alterar senha com senha atual"
          schema:
            $ref: '#/definitions/alterpassSchema'
      responses: 
        201: 
          description: "Senha alterada com sucesso"
          schema:
            $ref: '#/definitions/ResponseAlterpassSchema'
        400:
          description: "Senha incorreta! Você já errou a senha 1 vez(es). / CPF ou código inválidos"
  
  /accounts/{accountId}/cards/{cardId}/token:
    get:
      tags:
        - "Cards"
      summary: "Verifica se a senha do cartão está correta e gera o token para realizar uma transação"
      parameters:
        - 
          name: "access_token"
          in: "header"
          description: "access_token capturado no login"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - 
          name: "accountId"
          in: "path"
          description: "ID da conta"
          required: true
          type: "string"
        - 
          name: "cardId"
          in: "path"
          description: "ID do cartão"
          required: true
          type: "string"
      responses: 
        200: 
          description: "A senha está correta."
          schema:
            $ref: '#/definitions/MessageCardVerifySchema'
        401: 
          description: "Não autorizado"
        404: 
          description: "Falha no envio do código de validação."

  /accounts/{accountId}/cards/{cardId}/status: 
    post: 
      tags: 
      - "Cards"
      summary: "Altera o status do cartão"
      parameters:
        - 
          name: "access_token"
          in: "header"
          description: "access_token capturado no login"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - 
          name: "accountId"
          in: "path"
          description: "ID da conta"
          required: true
          type: "string"
        - 
          name: "cardId"
          in: "path"
          description: "ID do cartão"
          required: true
          type: "string"
      responses: 
        200: 
          description: "Cartão desbloqueado"
          schema:
            $ref: '#/definitions/statusCartaoSchema'
        404: 
          description: "Estágio cartão não permite desbloqueio. Cartão não impresso"
          schema:
            $ref: '#/definitions/MessageSchema'


    

  
  #EXTRATO
  /accounts/{accountId}/extracts:
    get: 
      tags: 
      - "Extrato"
      summary: "Lista os extratos de uma conta por período"
      parameters:
        - 
          name: "access_token"
          in: "header"
          description: "access_token capturado no login"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - 
          name: "accountId"
          in: "path"
          description: "ID da conta"
          required: true
          type: "integer"
        - 
          name: "initialDate"
          in: "query"
          description: "Data inicial do período no formato YYYY-MM-DD"
          required: true
          type: "string"
        - 
          name: "finalDate"
          in: "query"
          description: "Data final do período no formato YYYY-MM-DD"
          required: true
          type: "string"
      responses: 
        200: 
          description: "Extrato encontrado"
          schema:
            $ref: '#/definitions/ExtratoSchema'
        401: 
          description: "Não autorizado"
        404: 
          description: "Nenhum registro encontrado para essa solicitação."

  /users/{cpf}/extracts: 
    get: 
      tags: 
      - "Extrato"
      summary: "Lista o extrato de todas as contas do usuário nos produtos enviados"
      parameters:
        - 
          name: "access_token"
          in: "header"
          description: "access_token capturado no login"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - 
          name: "cpf"
          in: "path"
          description: "CPF do usuário"
          required: true
          type: "string"
        - 
          name: "initialDate"
          in: "query"
          description: "Data inicial do período no formato YYYY-MM-DD"
          required: true
          type: "string"
        - 
          name: "finalDate"
          in: "query"
          description: "Data final do período no formato YYYY-MM-DD"
          required: true
          type: "string"
        - 
          name: "productId"
          in: "query"
          description: "IDs dos produtos enviados em formato de array"
          required: true
          type: "string"
      responses: 
        200: 
          description: "Extrato encontrado"
          schema:
            $ref: '#/definitions/ExtratoContasProdutoSchema'
        401: 
          description: "Unauthorized"
        404: 
          description: "Nenhum registro encontrado para essa solicitação" 
  
  #2fa
  /users/{cpf}/cards/{cardId}/code:
    get:
      tags:
        - "Two Factor Authentication"
      summary: "Cadastra código no banco e envia-o para o celular"
      parameters:
        - 
          name: "access_token"
          in: "header"
          description: "access_token capturado no login"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - 
          name: "cpf"
          in: "path"
          description: "CPF do usuário"
          required: true
          type: "string"
        - 
          name: "cardId"
          in: "body"
          description: "ID do cartão"
          required: true
          schema:
            $ref: '#/definitions/2faCardIdSchema'
      responses: 
        201: 
          description: "Código validador enviado com sucesso para o telefone (XXX) XXXXX-XXXX."
        401: 
          description: "Não autorizado"
        404: 
          description: "Falha no envio do código de validação." 

  # /2fa/{username}: 
  #   get: 
  #     tags: 
  #     - "Two factor authentication"
  #     summary: "Valida se o codigo esta correto"
  #     parameters:
  #       - 
  #         name: "Authorization"
  #         in: "header"
  #         description: "access_token capturado no login"
  #         required: true
  #         type: "string"
  #       - 
  #         name: "client_id"
  #         in: "header"
  #         description: "client_id"
  #         required: true
  #         type: "string"
  #       -
  #          name: "username"
  #          in: "path"
  #          description: "CPF do usuário"
  #          required: true
  #          type: "integer"
  #       - 
  #          name: "randomCode"
  #          in: "query"
  #          description: "Código enviado"
  #          required: true
  #          type: "string"
  #     responses: 
  #       200: 
  #         description: "Codigo correto!"
  #       401: 
  #         description: "Não autorizado"
  #       404: 
  #         description: "Codigo incorreto!"

  #   post: 
  #     tags: 
  #     - "Two factor authentication"
  #     summary: "Cadastra Codigo no banco e envia codigo para o celular"
  #     parameters:
  #       - 
  #         name: "Authorization"
  #         in: "header"
  #         description: "access_token capturado no login"
  #         required: true
  #         type: "string"
  #       - 
  #         name: "client_id"
  #         in: "header"
  #         description: "client_id"
  #         required: true
  #         type: "string"
  #       - 
  #          name: "username"
  #          in: "path"
  #          description: "CPF do usuário"
  #          required: true
  #          type: "string"
  #       - 
  #          name: "cardId"
  #          in: "body"
  #          description: "ID do cartão"
  #          required: true
  #          schema:
  #           $ref: '#/definitions/2faCardIdSchema'
  #     responses: 
  #       201: 
  #         description: "Código de validação enviado com sucesso."
  #       401: 
  #         description: "Não autorizado"
  #       404: 
  #         description: "Falha no envio do código de validação."

  #PUBLIC KEY
  /publickey:
    get:
      tags:
        - "Keys"
      summary: "Chave pública para criptografar senhas e número do cartão do usuário quando completo através da criptografia RSA"
      parameters: 
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
      responses:
        200:
          description: "Retorna a chave pública"
  
  #CEP
  /adresses{cep}:
    get:
      tags:
        - "CEP"
      summary: "Pega os dados do endereço por CEP"
      parameters: 
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - 
          name: "cep"
          in: "path"
          description: "CEP do endereço"
          required: true
          type: "string"
      responses:
        200:
          description: "Endereço encontrado"
          schema:
            $ref: '#/definitions/CEPSchema'
        400:
          description: "CEP inválido"
        404:
          description: "Endereço não encontrado"

  #FEES
  /companies/{uri}/fees:
    get:
      tags:
        - "General"
      summary: "Lista o ID do intermediário, os seus produtos e as transações que podem ocorrer para cada produto e o valor de sua recarga mínima"
      parameters: 
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - 
          name: "uri"
          in: "path"
          description: "Domínio cadastrado para o intermediário"
          required: true
          type: "string"
        - 
          name: "feeId"
          in: "query"
          description: "(ID da tarifa, se enviar o feeId, ele traz somente os produtos que contenham essa tarifa. Se não enviar, ele traz todos os produtos. Tarifas=> 1: PGTO_BOLETO, 2: TED, 3: DOC, 4: RECARGA DE CARTÃO, 5: AUTO CADASTRO, 6: P2P, 7: RECARGA DE CELULAR"
          required: false
          type: "integer"
      responses:
        200:
          description: "Produtos listados com sucesso"
          schema:
            $ref: '#/definitions/companiesSchema'
        404:
          description: "Domínio não encontrado"


  #Autocadastro
  /bankslips/{ourNumber}/pdf:
    get:
      tags:
        - "Autocadastro"
      summary: "Gera pdf do boleto de autocadastro para o usuário e retorna o PDF ou envia por e-mail"
      parameters: 
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - 
          name: "ourNumber"
          in: "path"
          description: "Número do boleto"
          required: true
          type: "string"
        - 
          name: "email"
          in: "query"
          description: "(se enviar true ele envia o PDF por e-mail). Se quiser que o base64 retorne no response, não enviar queryStringParameter"
          required: false
          type: "boolean"
      responses:
        200:
          description: "PDF gerado em base64 ou enviado por e-mail"
          schema:
            $ref: '#/definitions/bankslipPDFSchema'
        404:
          description: "Número do boleto não encontrado"

  /users/{cpf}/bankslip:
    get:
      tags:
        - "Autocadastro"
      summary: "Verifica se o usuário possui boleto de autocadastro"
      parameters:
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - 
          name: "cpf"
          in: "path"
          description: "CPF do usuário"
          required: true
          type: "string"
        - 
          name: "productId"
          in: "query"
          description: "ID do produto"
          required: true
          type: "string"
      responses:
        200:
          description: "PDF gerado em base64 ou enviado por e-mail"
          schema:
            $ref: '#/definitions/userHasBankslipSchema'
        404:
          description: "Número do boleto não encontrado"
    post:
      tags:
        - "Autocadastro"
      summary: "Registra o boleto de auto cadastro do usuário e retorna o número"
      parameters: 
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        - 
          name: "cpf"
          in: "path"
          description: "CPF do usuário"
          required: true
          type: "string"
        - 
          name: "idCompany"
          in: "query"
          description: "ID do intermediário"
          required: true
          type: "string"
        - 
          name: "idProduto"
          in: "query"
          description: "ID do produto"
          required: true
          type: "string"
        - in: body
          name: RegisterBankslip
          description: "Parametros de registro de boleto"
          schema:
            $ref: '#/definitions/registerBankslipSchema'
      responses:
        201:
          description: "Boleto gerado com sucesso"
          schema:
            $ref: '#/definitions/responseRegisterBankslipSchema'
        400:
          description:  "Titulo ja incluido anteriormente. / Verifique se o CPF está correto. Se sim, naõ foi possível atender a sua solicitação. Para maiores informações, contate a nossa Central de Atendimento."
      
definitions:
  UnlockCardRequestSchema:
    type: "object"
    properties:
      transactionToken:
        type: "string"
  TransactionRequestSchema:
    type: "object"
    properties:
      token:
        type: "string"
  TransactionPostSchema:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
      code:
        type: "string"
      cardId:
        type: "string"
  P2pSchema:
    type: "object"
    properties:
      valorTotal:
        type: "string"
      cpf_cnpj_destinatario:
        type: "string"
      conta_cartao_origem:
        type: "string"
      clienteNome_origem:
        type: "string"
      favorecido:
        type: "string"
      conta_cartao_destinatario:
        type: "string"
      conta_destinatario:
        type: "string"
      transactionToken:
        type: "string"
  TransferSchema:
    type: "object"
    properties:
      agencia_destinatario:
        type: "string"
      conta_destinatario:
        type: "string"
      digitoConta_destinatario:
        type: "string"
      banco_destinatario:
        type: "string"
      tipoConta_destinatario:
        type: "string"
      favorecido:
        type: "string"
      valorTotal:
        type: "string"
      tipoTransferencia:
        type: "string"
      cpf_cnpj_destinatario:
        type: "string"
      conta_cartao_origem:
        type: "string"
      clienteNome_origem:
        type: "string"
      destinatario:
        type: "string"
      valorTarifa:
        type: "string"
      protocolId:
        type: "string"
      autenticacao:
        type: "string"
      transactionToken:
        type: "string"
  PagamentoBoletoSchema:
    type: "object"
    properties:
      valorTotal:
        type: "string"
      dataVencimento:
        type: "string"
      serviceType:
        type: "string"
      statusComprovante:
        type: "string"
      instituicaoRecebedora:
        type: "string"
      protocolPaymentId:
        type: "string"
      protocolId:
        type: "string"
      cpf_cnpj_destinatario:
        type: "string"
      conta_cartao_origem:
        type: "string"
      clienteNome_origem:
        type: "string"
      transactionToken:
        type: "string"
      cod_barra:
        type: "string"
  RechargeCellSchema:
    type: "object"
    properties:
      valorTotal:
        type: "string"
      operadora:
        type: "string"
      ddd:
        type: "string"
      countrycode:
        type: "string"
      numero_Cell:
        type: "string"
      clienteNome_origem:
        type: "string"
      cpf_cnpj_origem:
        type: "string"
      tarifa:
        type: "string"
      transactionToken:
        type: "string"
  MessageSchema:
    type: "object"
    properties:
      message:
        type: "string"
  #CARDS
  MessageCardVerifySchema:
    type: "object"
    properties:
      message:
        type: "string"
      token:
        type: "string"
  
  alterpassSchema:
    type: "object"
    properties:
      new_password: 
        type: "string"
      password: 
        type: "string"
  
  alterpasswithSchema:
    type: "object"
    properties:
      new_password: 
        type: "string"
      randomCode: 
        type: "string"
      username: 
        type: "string"

  2faCardIdSchema:
    type: "object"
    properties:
      cardId:
        type: "integer"

  ResponseAlterpassSchema:
    type: "object"
    properties:
      message:
        type: "string"
  
  statusCartaoSchema:
    type: "object"
    properties:
      id: 
        type: "integer"
      flagTitular: 
        type: "integer"
      idPessoa: 
        type: "integer"
      sequencialCartao: 
        type: "integer"
      idConta: 
        type: "integer"
      idStatus: 
        type: "integer"
      dataStatus: 
        type: "string"
      idEstagio: 
        type: "integer"
      dataEstagio: 
        type: "string"
      numeroBin: 
        type: "integer"
      numeroCartao: 
        type: "string"
      numeroCartaoHash: 
        type: "integer"
      numeroCartaoCriptografado: 
        type: "string"
      dataEmissao: 
        type: "string"
      dataValidade: 
        type: "string"
      cartaoVirtual: 
        type: "integer"
      impressaoAvulsa: 
        type: "string"
      dataImpressao: 
        type: "string"
      nomeArquivoImpressao: 
        type: "string"
      idProduto: 
        type: "integer"
      nomeImpresso: 
        type: "string"
      codigoDesbloqueio: 
        type: "string"
      tipoPortador: 
        type: "string"
      idStatusCartao: 
        type: "integer"
      dataStatusCartao: 
        type: "string"
      idEstagioCartao: 
        type: "integer"
      dataEstagioCartao: 
        type: "string"
      dataGeracao: 
        type: "string"
      flagVirtual: 
        type: "integer"
      flagImpressaoOrigemComercial: 
        type: "string"
      arquivoImpressao: 
        type: "string"
      portador:
        type: "string"
  
  CardAlterPasswordSchema:
    type: "object"
    properties:
      password:
        type: "string"
      newPassword:
        type: "string"
      randomCode:
        type: "string"
  2faSchema:
    type: "object"
    properties:
      email:
        type: "string"
      phoneNumber:
        type: "string"
  UserSchema:
    type: "object"
    properties:
      id:
        type: "number"
      nome:
        type: "string"
      tipo:
        type: "number"
      cpf:
        type: "string"
      dataNascimento:
        type: "number"
      sexo:
        type: "string"
      numeroIdentidade:
        type: "number"
      orgaoExpedidorIdentidade:
        type: "string"
      unidadeFederativaIdentidade:
        type: "string"
      dataEmissaoIdentidade:
        type: "number"
      email:
        type: "string"
      telefone:
        type: object
        properties:
          id:
            type: "number"
          idTipoTelefone:
            type: "number"
          idPessoa:
            type: "number"
          ddd:
            type: "string"
          telefone:
            type: "string"
          ramal:
            type: "string"
          status:
            type: "number"
  CardSchema:
    type: "object"
    properties:
      id:
        type: "number"
      flagTitular:
        type: "number"
      idPessoa:
        type: "number"
      sequencialCartao:
        type: "number"
      idConta:
        type: "number"
      idStatus:
        type: "number"
      dataStatus:
        type: "string"
      idEstagio:
        type: "number"
      dataEstagio:
        type: "string"
      numeroBin:
        type: "number"
      numeroCartao:
        type: "number"
      numeroCartaoHash:
        type: "string"
      numeroCartaoCriptografado:
        type: "string"
      dataEmissao:
        type: "string"
      dataValidade:
        type: "string"
      cartaoVirtual:
        type: "number"
      impressaoAvulsa:
        type: "string"
      dataImpressao:
        type: "string"
      nomeArquivoImpressao:
        type: "string"
      idProduto:
        type: "number"
      nomeImpresso:
        type: "string"
      codigoDesbloqueio:
        type: "string"
      tipoPortador:
        type: "string"
      idStatusCartao:
        type: "number"
      dataStatusCartao:
        type: "string"
      idEstagioCartao:
        type: "number"
      dataEstagioCartao:
        type: "string"
      dataGeracao:
        type: "string"
      flagVirtual:
        type: "boolean"
      flagImpressaoOrigemComerial:
        type: "string"
      arquivoImpressao:
        type: "string"
  UnlockCardSchema:
    type: "object"
    properties:
      id:
        type: "number"
      flagTitular:
        type: "number"
      idPessoa:
        type: "number"
      sequencialCartao:
        type: "number"
      idConta:
        type: "number"
      idStatus:
        type: "number"
      dataStatus:
        type: "string"
      idEstagio:
        type: "number"
      dataEstagio:
        type: "string"
      numeroBin:
        type: "number"
      numeroCartao:
        type: "number"
      numeroCartaoHash:
        type: "string"
      numeroCartaoCriptografado:
        type: "string"
      dataEmissao:
        type: "string"
      dataValidade:
        type: "string"
      cartaoVirtual:
        type: "number"
      impressaoAvulsa:
        type: "string"
      dataImpressao:
        type: "string"
      nomeArquivoImpressao:
        type: "string"
      idProduto:
        type: "number"
      nomeImpresso:
        type: "string"
  ForgotPasswordSchema:
    type: "object"
    properties:
      username:
        type: "string"
      idCompany:
        type: "string"
      password:
        type: "string"
      newPassword:
        type: "string"
  ResetPasswordSchema:
    type: "object"
    properties:
      username:
        type: "string"
      idCompany:
        type: "string"
  CryptographedCardNumber:
    type: "object"
    properties:
      encryptedParam:
        type: "string"
  AccountSchema:
    type: "object"
    properties:
      id:
        type: "number"
      idPessoa:
        type: "number"
      nome:
        type: "string"
      idProduto:
        type: "number"
      idOrigemComercial:
        type: "number"
      nomeOrigemComercial:
        type: "string"
      idFatasiaBasica:
        type: "number"
      nomeFantasiaBasica:
        type: "string"
      idStatusConta:
        type: "number"
      statusConta:
        type: "string"
      diaVencimento:
        type: "number"
      melhorDiaCompra:
        type: "number"
      dataStatusConta:
        type: "string"
      dataCadastro:
        type: "string"
      dataUltimaAlteracaoVencimento:
        type: "string"
      dataHoraUltimaCompra:
        type: "string"
      numeroAgencia:
        type: "number"
      numeroContaCorrente:
        type: "string"
      valorRenda:
        type: "number"
      formaEnvioFatura:
        type: "string"
      titular:
        type: "boolean"    
      limiteGlobal:
        type: "number"
      limiteSaqueGlobal:
        type: "number"
      saldoDisponivelGlobal:
        type: "number"
      saldoDisponivelSaque:
        type: "number"
      impedidoFinanciamento:
        type: "boolean"
      diasAtraso:
        type: "number"
      proximoVencimentoPadrao:
        type: "string"
      idProposta:
        type: "number"
      quantidadePagamentos:
        type: "number"
      correspondencia:
        type: "number"
      dataInicioAtraso:
        type: "string"
      rotativoPagaJuros:
        type: "number"
      totalPosProx:
        type: "number"
      saldoAtualFinal:
        type: "number"
      saldoExtratoAnterior:
        type: "number"
      aceitaNovaContaPorGrupoProduto:
        type: "boolean"
      funcaoAtiva:
        type: "string"
  ExtractSchema:
    type: "object"
    properties:
      id:
        type: "number"
      idTipoTransacao:
        type: "number"
      descricaoAbreviada:
        type: "string"
      statusTransacao:
        type: "string"
      idEvento:
        type: "number"
      tipoEvento:
        type: "string"
      idConta:
        type: "number"
      cartaoMascarado:
        type: "string"
      nomePortador:
        type: "string"
      dataTransacao:
        type: "string"
      dataFaturamento:
        type: "string"
      dataVencimento:
        type: "string"
      modoEntradaTransacao:
        type: "string"
      valorTaxaEmbarque:
        type: "number"
      valorEntrada:
        type: "number"
      valorBRL:
        type: "number"
      valorUSD:
        type: "number"
      cotacaoUSD:
        type: "number"
      dataCotacaoUSD:
        type: "string"
      codigoMoedaOrigem:
        type: "string"
      codigoMoedaDestino:
        type: "string"    
      codigoAutorizacao:
        type: "string"
      codigoReferencia:
        type: "string"
      codigoTerminal:
        type: "string"
      codigoMCC:
        type: "number"
      grupoMCC:
        type: "number"
      grupoDescricaoMCC:
        type: "string"
      idEstabelecimento:
        type: "number"
      nomeEstabelecimento:
        type: "string"
      nomeFantasiaEstabelecimento:
        type: "string"
      localidadeEstabelecimento:
        type: "string"
      planoParcelamento:
        type: "number"
      numeroParcela:
        type: "number"
      detalhesTransacao:
        type: "string"
      flagCredito:
        type: "number"
      flagFaturado:
        type: "number"
      flagEstorno:
        type: "number"
      idTransacaoEstorno:
        type: "number"
  CardsSchema:
    type: "object"
    properties:
      id:
        type: "number"
      flagTitular:
        type: "number"
      idPessoa:
        type: "number"
      sequencialCartao:
        type: "number"
      idConta:
        type: "number"
      idStatus:
        type: "number"
      dataStatus:
        type: "string"
      idEstagio:
        type: "number"
      dataEstagio:
        type: "string"
      numeroBin:
        type: "number"
      numeroCartao:
        type: "string"
      numeroCartaoHash:
        type: "number"
      numeroCartaoCriptografado:
        type: "string"
      dataEmissao:
        type: "string"
      dataValidade:
        type: "string"
      cartaoVirtual:
        type: "number"
      impressaoAvulsa:
        type: "number"
      dataImpressao:
        type: "string"
      nomeArquivoImpressao:
        type: "string"
      idProduto:
        type: "number"
      nomeImpresso:
        type: "string"    
      codigoDesbloqueio:
        type: "string"
  RegisterSchema:
    type: "object"
    properties:
      username:
        type: "string"
      idCompany:
        type: "string"
      email:
        type: "string"
  LoginSchema:
    type: "object"
    properties:
      username:
        type: "string"
      idCompany:
        type: "string"
      password:
        type: "string"
  LoginResponseSchema:
    type: "object"
    properties:
      first_access:
        type: "string"
  ConfirmPasswordSchema:
    type: "object"
    properties:
      username:
        type: "string"
      code:
        type: "string"
      idCompany:
        type: "string"
      password:
        type: "string"
  AlterPasswordSchema:
    type: "object"
    properties:
      username:
        type: "string"
      oldpass:
        type: "string"
      newpass:
        type: "string"
      idCompany:
        type: "string"
  RechargePdfSchema:
    type: "object"
    properties:
      pdf:
        type: "string"
  RechargeRegisterSchema:
    type: "object"
    properties:
      account:
        type: "string"
      cpf:
        type: "string"
      value:
        type: "string"
      productId:
        type: "string"
  RechargeResponseSchema:
    type: "object"
    properties:
      titleNumberBb:
        type: "string"
      digitableLine:
        type: "string"
      numericBarcode:
        type: "string"
      codigoCliente:
        type: "string"
      numeroContratoCobranca:
        type: "string"
      digitableLineFormatted:
        type: "string"
      info:
        type: "object"
        properties:
          product:
            type: "string"
          cpf:
            type: "string"
          account:
            type: "string"
          date:
            type: "string"
          transactionToken:
            type: "string"
  RechargePaymentsSchema:
    type: "array"
    items:
      type: "object"
      properties:
        bankslip:      
          type: "string"
        command:
          type: "string"
        status:
          type: "string"
        registro:
          type: "string"
  RechargeEmailPdfSchema:
       type: "object"
       properties:
        ourNumber:      
          type: "string"
        email:
          type: "string"
  CarrierAccountsSchema:
      type: "object"
      properties: 
        id:
          type: "number"
        idProduto:
          type: "number"
        idOrigemComercial:
          type: "number"
        idPessoa:
          type: "number"
        idStatusConta:
          type: "number"
        diaVencimento:
          type: "number"
        melhorDiaCompra:
          type: "number"
        dataStatusConta:
          type: "string"
        dataCadastro:
          type: "string"
        dataUltimaAlteracaoVencimento:
          type: "string"
        valorRenda:
          type: "number"
        idProposta:
          type: "number"
        funcaoAtiva:
          type: "string"
  CarrierPdfSchema:
    type: "object"
    properties:
      id:
        type: "number"
      idPessoa:
        type: "number"
      nome:
        type: "string"
      idProduto:
        type: "number"
      idOrigemComercial:
        type: "number"
      nomeOrigemComercial:
        type: "string"
      idFatasiaBasica:
        type: "number"
      nomeFantasiaBasica:
        type: "string"
      idStatusConta:
        type: "number"
      statusConta:
        type: "string"
      diaVencimento:
        type: "number"
      melhorDiaCompra:
        type: "number"
      dataStatusConta:
        type: "string"
      dataCadastro:
        type: "string"
      dataUltimaAlteracaoVencimento:
        type: "string"
      dataHoraUltimaCompra:
        type: "string"
      numeroAgencia:
        type: "number"
      numeroContaCorrente:
        type: "string"
      valorRenda:
        type: "number"
      formaEnvioFatura:
        type: "string"
      titular:
        type: "boolean"    
      limiteGlobal:
        type: "number"
      limiteSaqueGlobal:
        type: "number"
      saldoDisponivelGlobal:
        type: "number"
      saldoDisponivelSaque:
        type: "number"
      impedidoFinanciamento:
        type: "boolean"
      diasAtraso:
        type: "number"
      proximoVencimentoPadrao:
        type: "string"
      idProposta:
        type: "number"
      quantidadePagamentos:
        type: "number"
      correspondencia:
        type: "number"
      dataInicioAtraso:
        type: "string"
      rotativoPagaJuros:
        type: "number"
      totalPosProx:
        type: "number"
      saldoAtualFinal:
        type: "number"
      saldoExtratoAnterior:
        type: "number"
      aceitaNovaContaPorGrupoProduto:
        type: "boolean"
      funcaoAtiva:
        type: "string"
      extract:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "number"
            idTipoTransacao:
              type: "number"
            descricaoAbreviada:
              type: "string"
            statusTransacao:
              type: "string"
            idEvento:
              type: "number"
            tipoEvento:
              type: "string"
            idConta:
              type: "number"
            cartaoMascarado:
              type: "string"
            nomePortador:
              type: "string"
            dataTransacao:
              type: "string"
            dataFaturamento:
              type: "string"
            dataVencimento:
              type: "string"
            modoEntradaTransacao:
              type: "string"
            valorTaxaEmbarque:
              type: "number"
            valorEntrada:
              type: "number"
            valorBRL:
              type: "number"
            valorUSD:
              type: "number"
            cotacaoUSD:
              type: "number"
            dataCotacaoUSD:
              type: "string"
            codigoMoedaOrigem:
              type: "string"
            codigoMoedaDestino:
              type: "string"    
            codigoAutorizacao:
              type: "string"
            codigoReferencia:
              type: "string"
            codigoTerminal:
              type: "string"
            codigoMCC:
              type: "number"
            grupoMCC:
              type: "number"
            grupoDescricaoMCC:
              type: "string"
            idEstabelecimento:
              type: "number"
            nomeEstabelecimento:
              type: "string"
            nomeFantasiaEstabelecimento:
              type: "string"
            localidadeEstabelecimento:
              type: "string"
            planoParcelamento:
              type: "number"
            numeroParcela:
              type: "number"
            detalhesTransacao:
              type: "string"
            flagCredito:
              type: "number"
            flagFaturado:
              type: "number"
            flagEstorno:
              type: "number"
            idTransacaoEstorno:
              type: "number"
  CepSchema:
    type: "object"
    properties:
      cep:
        type: "string"
      endereco:
        type: "string"
      bairro: 
        type: "string"
      cidade:
        type: "string"
      uf:
        type: "string"
  NewPasswordSchema:
    type: "object"
    properties:
      username:
        type: "string"
      idCompany:
        type: "string"
      password: 
        type: "string"
      newPassword:
        type: "string"
  #TRANSACTION
  p2pSchema:
    type: "object"
    properties:
      valorTotal: 
        type: "number"
      cpf_cnpj_destinatario: 
        type: "string"
      conta_cartao_origem: 
        type: "string"
      clienteNome_origem: 
        type: "string"
      favorecido: 
        type: "string"
      conta_cartao_destinatario: 
        type: "string"
      conta_destinatario:
        type: "number"
  
  transferSchema:
    type: "object"
    properties:
      valorTotal: 
        type: "number"
      conta_cartao_origem: 
        type: "string"
      clienteNome_origem: 
        type: "string"
      banco_destinatario: 
        type: "string"
      agencia_destinatario: 
        type: "string"
      conta_destinatario: 
        type: "string"
      digitoConta_destinatario:
        type: "number"
      cpf_cnpj_destinatario:
        type: "string"
      tipoConta_destinatario:
        type: "string"
      tipoTransferencia:
        type: "string"
      favorecido:
        type: "string"
      valor_transferencia: 
        type: "string"
      valorTarifa:
        type: "string"
  
  rechargeCellSchema:
    type: "object"
    properties:
      valorTotal: 
        type: "number"
      conta_cartao_origem:
        type: "string"
      clienteNome_origem:
        type: "string"
      cpf_cnpj_origem:
        type: "string"
      countryCode:
        type: "string"
      ddd:
        type: "string"
      numero_Cel:
        type: "string"
      operadora:
        type: "string"
      valor:
        type: "number"
      tarifa:
        type: "number"
  
  billPaymentSchema:
    type: "object"
    properties:
      valorTotal: 
        type: "number"
      conta_cartao_origem:
        type: "string"
      clienteNome_origem:
        type: "string"
      cpf_cnpj_origem:
        type: "string"
      cod_barra:
        type: "string"
      instituicaoRecebedora:
        type: "string"
      dataVencimento:
        type: "string"
      dataPagamento:
        type: "string"
      descricao:
        type: "number"
  
  bankslippdfbyemailSchema:
    type: "object"
    properties:
        ourNamber:
          type: "string"
        cpf:
          type: "string"
          
  banksliregisterSchema:
    type: "object"
    properties:
      productId:
        type: "integer"
      cpf:
        type: "string"
      value:
        type: "integer"

  bankslipRegisterResponseSchema:
    type: "object"
    properties:
      titleNumberBb:
        type: "string"
      digitableLine:
        type: "string"
      numericBarcode:
        type: "string"
      codigoCliente:
        type: "string"
      numeroContratoCobranca:
        type: "string"
      digitableLineFormatted:
        type: "string"
      info:
        type: "object"
        properties:
          product:
            type: "string"
          cpf:
            type: "string"
          account:
            type: "string"
          date:
            type: "string"

  #BOLETO
  boletoSchema:
    type: "objetc"
    properties:
      valorTotal:
        type: "string"
      data_hora:
        type: "string"
      tipoAcao:
        type: "number"
      statusComprovante:
        type: "string"
      descricao: 
        type: "string"
      idVouche:
        type: "string"
  
  #ACCOUNTS
  accountDetailSchema:
    type: "object"
    properties:
      id:
        type: "integer"
      idPessoa:
        type: "integer"
      name:
        type: "string"
      idProduto:
        type: "integer"
      idOrigemComercial: 
        type: "integer"
      nomeOrigemComercial:
        type: "string"
      idFantasiaBasica:
        type: "integer"
      nomeFantasiaBasica:
        type: "string"
      idStatusConta:
        type: "integer"
      statusConta:
        type: "string"
      diaVencimento: 
        type: "integer"
      melhorDiaCompra:
        type: "integer"
      dataStatusConta:
        type: "string"
      dataCadastro:
        type: "string"
      dataUltimaAlteracaoVencimento:
        type: "string"
      dataHoraUltimaCompra: 
        type: "string"
      numeroAgencia:
        type: "integer"
      numeroContaCorrente:
        type: "string"
      valorRenda:
        type: "string"
      formaEnvioFatura:
        type: "string"
      titular:
        type: "bolean"
      limiteGlobal: 
        type: "integer"
      limiteSaqueGlobal:
        type: "integer"
      saldoDisponivelGlobal:
        type: "float"
      saldoDisponivelSaque:
        type: "float"
      impedidoFinanciamento:
        type: "bolean"
      diasAtraso:
        type: "integer"
      proximoVencimentoPadrao: 
        type: "string"
      idProposta:
        type: "integer"
      quantidadePagamentos:
        type: "integer"
      correspondencia:
        type: "integer"
      dataInicioAtraso:
        type: "string"
      rotativoPagaJuros:
        type: "integer"
      totalPosProx:
        type: "integer"
      saldoAtualFinal: 
        type: "integer"
      saldoExtratoAnterior:
        type: "integer"
      aceitaNovaContaPorGrupoProduto: 
        type: "string"
      funcaoAtiva:
        type: "string"

  accounttSchema:
    type: "object"
    properties:
      encryptedParam:
        type: "string"
  
  accountSchema:
    type: "object"
    properties:
      id: 
        type: "integer"
      flagTitular:  
        type: "integer"
      idPessoa: 
        type: "integer"
      sequencialCartao: 
        type: "integer"
      idConta:  
        type: "integer"
      idStatus: 
        type: "integer"
      dataStatus: 
        type: "string"
      idEstagio:  
        type: "integer"
      dataEstagio:  
        type: "string"
      numeroBin:  
        type: "integer"
      numeroCartao: 
        type: "string"
      numeroCartaoHash: 
        type: "integer"
      numeroCartaoCriptografado:  
        type: "string"
      dataEmissao:  
        type: "string"
      dataValidade: 
        type: "string"
      cartaoVirtual:  
        type: "integer"
      impressaoAvulsa:  
        type: "integer"
      dataImpressao:  
        type: "integer"
      nomeArquivoImpressao: 
        type: "string"
      idProduto:  
        type: "integer"
      nomeImpresso: 
        type: "string"
      codigoDesbloqueio:  
        type: "string"
      tipoPortador: 
        type: "string"
      idStatusCartao: 
        type: "integer"
      dataStatusCartao: 
        type: "string"
      idEstagioCartao:  
        type: "integer"
      dataEstagioCartao:  
        type: "string"
      dataGeracao:  
        type: "string"
      flagVirtual:  
        type: "integer"
      flagImpressaoOrigemComercial: 
        type: "string"
      arquivoImpressao: 
        type: "string"
  
  #EXTRATO
  ExtratoSchema:
    type: "object"
    properties:
      id: 
        type: "integer"
      idPessoa: 
        type: "integer"
      nome: 
        type: "string"
      idProduto: 
        type: "integer"
      idOrigemComercial: 
        type: "integer"
      nomeOrigemComercial: 
        type: "string"
      idFantasiaBasica: 
        type: "integer"
      nomeFantasiaBasica: 
        type: "string"
      idStatusConta: 
        type: integer
      statusConta: 
        type: "string"
      diaVencimento: 
        type: "integer"
      melhorDiaCompra: 
        type: "integer"
      dataStatusConta: 
        type: "string"
      dataCadastro: 
        type: "string"
      dataUltimaAlteracaoVencimento: 
        type: "string"
      dataHoraUltimaCompra: 
        type: "string"
      numeroAgencia: 
        type: "integer"
      numeroContaCorrente: 
        type: "string"
      valorRenda: 
        type: "float"
      formaEnvioFatura: 
        type: "string"
      titular: 
        type: "bolean"
      limiteGlobal: 
        type: "integer"
      limiteSaqueGlobal: 
        type: "integer"
      saldoDisponivelGlobal: 
        type: "float"
      saldoDisponivelSaque: 
        type: "integer"
      impedidoFinanciamento: 
        type: "Bolean"
      diasAtraso: 
        type: "integer"
      proximoVencimentoPadrao: 
        type: "string"
      idProposta: 
        type: "integer"
      quantidadePagamentos: 
        type: "integer"
      correspondencia: 
        type: "integer"
      dataInicioAtraso: 
        type: "string"
      rotativoPagaJuros: 
        type: "float"
      totalPosProx: 
        type: "float"
      saldoAtualFinal: 
        type: "float"
      saldoExtratoAnterior: 
        type: "float"
      aceitaNovaContaPorGrupoProduto: 
        type: "string"
      funcaoAtiva: 
        type: "string"
      extract: 
        type: "object"
        properties:
          id: 
            type: "integer"
          idTipoTransacao: 
            type: "integer"
          descricaoAbreviada: 
            type: "string"
          statusTransacao: 
            type: "integer"
          idEvento: 
            type: "integer"
          tipoEvento: 
            type: "string"
          idConta: 
            type: "integer"
          cartaoMascarado: 
            type: "integer"
          nomePortador: 
            type: "string"
          dataTransacaoUTC: 
            type: "string"
          dataTransacao: 
            type: "string"
          dataFaturamento: 
            type: "string"
          dataVencimento: 
            type: "string"
          modoEntradaTransacao: 
            type: "string"
          valorTaxaEmbarque: 
            type: "string"
          valorEntrada: 
            type: "string"
          valorBRL: 
            type: "string"
          valorUSD: 
            type: "string"
          cotacaoUSD: 
            type: "string"
          dataCotacaoUSD: 
            type: "string"
          codigoMoedaOrigem: 
            type: "string"
          codigoMoedaDestino: 
            type: "string"
          codigoAutorizacao: 
            type: "string"
          codigoReferencia: 
            type: "string"
          codigoTerminal: 
            type: "string"
          codigoMCC: 
            type: "string"
          grupoMCC: 
            type: "string"
          grupoDescricaoMCC: 
            type: "string"
          idEstabelecimento: 
            type: "integer"
          nomeEstabelecimento: 
            type: "string"
          nomeFantasiaEstabelecimento: 
            type: "string"
          localidadeEstabelecimento: 
            type: "string"
          planoParcelamento: 
            type: "string"
          numeroParcela: 
            type: "string"
          detalhesTransacao: 
            type: "string"
          flagCredito: 
            type: "integer"
          flagFaturado: 
            type: "integer"
          flagEstorno: 
            type: "string"
          idTransacaoEstorno: 
            type: "string"

  ExtratoContasProdutoSchema:
    type: "object"
    properties:
      id: 
        type: "integer"
      idProduto: 
        type: "integer"
      idOrigemComercial: 
        type: "integer"
      idPessoa: 
        type: "integer"
      idStatusConta: 
        type: "integer"
      diaVencimento: 
        type: "integer"
      melhorDiaCompra: 
        type: "integer"
      dataStatusConta: 
        type: "string"
      dataCadastro: 
        type: "string"
      dataUltimaAlteracaoVencimento: 
        type: "string"
      valorRenda: 
        type: "string"
      idProposta: 
        type: "integer"
      funcaoAtiva: 
        type: "integer"
  
  #CEP
  CEPSchema:
    type: "object"
    properties:
      cep: 
        type: "string"
      endereco: 
        type: "string"
      bairro: 
        type: "string"
      cidade: 
        type: "string"
      uf: 
        type: "string"
  
  #OAuth
  forgotSchema:
    type: "object"
    properties:
      username: 
        type: "string"
      idCompany: 
        type: "string"
      code: 
        type: "string"
      password: 
        type: "string"

  firstAccessChangePasswordSchema:
    type: "object"
    properties:
      username: 
        type: "string"
      idCompany: 
        type: "string"
      password: 
        type: "string"
      newPassword: 
        type: "string"

  #Autocadastro
  bankslipPDFSchema:
    type: "object"
    properties:
      pdf:
        type: "string"
      message:
        type: "string"

  userHasBankslipSchema:
    type: "object"
    properties:
      message:
        type: "string"
      ourNumber:
        type: "string"

  registerBankslipSchema:
    type: "object"
    properties:
      rechargeValue:
        type: "number"
      feeValue:
        type: "number"

  responseRegisterBankslipSchema:
    type: "object"
    properties:
      nossoNumero:
        type: "string"

  #Comprovantes
  VoucherResponseSchema:
    type: "object"
    properties:
      id_user:
        type: "string"
      idVoucher:
        type: "string"
      clienteNome_origem:
        type: "string"
      conta_cartao_origem:
        type: "string"
      data_hora:
        type: "string"
      descricao:
        type: "string"
      statusComprovante:
        type: "string"
      tipoAcao:
        type: "string"
      valorTotal:
        type: "string"
      agencia_destinatario:
        type: "string"
      autenticacao:
        type: "string"
      banco_destinatario:
        type: "string"
      conta_destinatario:
        type: "string"
      cpf_cnpj_destinatario:
        type: "string"
      digitoConta_destinatario:
        type: "string"
      favorecido:
        type: "string"
      finalidade:
        type: "string"
      protocoloId:
        type: "string"
      tipoConta_destinatario:
        type: "string"
      tipoTransferencia:
        type: "string"

  #Fees
  companiesSchema:
    type: "object"
    properties:
      id:
        type: "integer"
      taxId:
        type: "integer"
      name:
        type: "string"
      email:
        type: "string"
      phone:
        type: "integer"
      products:
        type: "object"      

  #Error
  ErrorSchema:
    type: "object"
    properties:
      message:
        type: "string"
